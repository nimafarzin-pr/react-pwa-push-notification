{"ast":null,"code":"const vapidPublicKey='BDoDrobLJcJoM3g7U821ccGoaTRqwEfMuqkc7DeH1cDWhEHOXdQm_s9j3rIQLTxGM72sVDeMWPmQDsXnGsBKB9w';// Replace this with a dynamically injected Ngrok URL at build time\nconst serverBaseURL='http://localhost:3000';export async function subscribeToNotifications(){if('serviceWorker'in navigator){try{const registration=await navigator.serviceWorker.register('/service-worker.js');const subscription=await registration.pushManager.subscribe({userVisibleOnly:true,applicationServerKey:urlBase64ToUint8Array(vapidPublicKey)});await fetch(\"\".concat(serverBaseURL,\"/subscribe\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(subscription)});await fetch(\"\".concat(serverBaseURL,\"/send-notification\"),{method:'POST',headers:{'Content-Type':'application/json'}});console.log('Subscribed to notifications!');}catch(error){console.error('Error subscribing to notifications:',error);}}else{console.warn('Push messaging is not supported');}}function urlBase64ToUint8Array(base64String){const padding='='.repeat((4-base64String.length%4)%4);const base64=(base64String+padding).replace(/-/g,'+').replace(/_/g,'/');const rawData=window.atob(base64);return Uint8Array.from([...rawData].map(char=>char.charCodeAt(0)));}","map":{"version":3,"names":["vapidPublicKey","serverBaseURL","subscribeToNotifications","navigator","registration","serviceWorker","register","subscription","pushManager","subscribe","userVisibleOnly","applicationServerKey","urlBase64ToUint8Array","fetch","concat","method","headers","body","JSON","stringify","console","log","error","warn","base64String","padding","repeat","length","base64","replace","rawData","window","atob","Uint8Array","from","map","char","charCodeAt"],"sources":["/Users/nimaf/Desktop/my-pwa/src/notification/notification.js"],"sourcesContent":["const vapidPublicKey = 'BDoDrobLJcJoM3g7U821ccGoaTRqwEfMuqkc7DeH1cDWhEHOXdQm_s9j3rIQLTxGM72sVDeMWPmQDsXnGsBKB9w';\n\n// Replace this with a dynamically injected Ngrok URL at build time\nconst serverBaseURL = 'http://localhost:3000';\n\nexport async function subscribeToNotifications() {\n  if ('serviceWorker' in navigator) {\n    try {\n      const registration = await navigator.serviceWorker.register('/service-worker.js');\n      const subscription = await registration.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey: urlBase64ToUint8Array(vapidPublicKey),\n      });\n\n      await fetch(`${serverBaseURL}/subscribe`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(subscription),\n      });\n\n      await fetch(`${serverBaseURL}/send-notification`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n      });\n\n      console.log('Subscribed to notifications!');\n    } catch (error) {\n      console.error('Error subscribing to notifications:', error);\n    }\n  } else {\n    console.warn('Push messaging is not supported');\n  }\n}\n\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n  const rawData = window.atob(base64);\n  return Uint8Array.from([...rawData].map((char) => char.charCodeAt(0)));\n}\n"],"mappings":"AAAA,KAAM,CAAAA,cAAc,CAAG,yFAAyF,CAEhH;AACA,KAAM,CAAAC,aAAa,CAAG,uBAAuB,CAE7C,MAAO,eAAe,CAAAC,wBAAwBA,CAAA,CAAG,CAC/C,GAAI,eAAe,EAAI,CAAAC,SAAS,CAAE,CAChC,GAAI,CACF,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAD,SAAS,CAACE,aAAa,CAACC,QAAQ,CAAC,oBAAoB,CAAC,CACjF,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAH,YAAY,CAACI,WAAW,CAACC,SAAS,CAAC,CAC5DC,eAAe,CAAE,IAAI,CACrBC,oBAAoB,CAAEC,qBAAqB,CAACZ,cAAc,CAC5D,CAAC,CAAC,CAEF,KAAM,CAAAa,KAAK,IAAAC,MAAA,CAAIb,aAAa,eAAc,CACxCc,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACZ,YAAY,CACnC,CAAC,CAAC,CAEF,KAAM,CAAAM,KAAK,IAAAC,MAAA,CAAIb,aAAa,uBAAsB,CAChDc,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CAEFI,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC7C,CAAE,MAAOC,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,qCAAqC,CAAEA,KAAK,CAAC,CAC7D,CACF,CAAC,IAAM,CACLF,OAAO,CAACG,IAAI,CAAC,iCAAiC,CAAC,CACjD,CACF,CAEA,QAAS,CAAAX,qBAAqBA,CAACY,YAAY,CAAE,CAC3C,KAAM,CAAAC,OAAO,CAAG,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAAIF,YAAY,CAACG,MAAM,CAAG,CAAE,EAAI,CAAC,CAAC,CAC/D,KAAM,CAAAC,MAAM,CAAG,CAACJ,YAAY,CAAGC,OAAO,EAAEI,OAAO,CAAC,IAAI,CAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,CAAE,GAAG,CAAC,CAC7E,KAAM,CAAAC,OAAO,CAAGC,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CACnC,MAAO,CAAAK,UAAU,CAACC,IAAI,CAAC,CAAC,GAAGJ,OAAO,CAAC,CAACK,GAAG,CAAEC,IAAI,EAAKA,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CACxE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}